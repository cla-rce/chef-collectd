#
# Cookbook Name:: collectd
# Recipe:: default
#
# Copyright 2010, Atari, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe "apt::default"

package "python-software-properties" do
  action :upgrade
end

collected_package_version = ""

case node[:platform]
when "ubuntu"
  case node[:platform_version].to_f
  when 10.04
    script "enable_ppa_jdub" do
      interpretter "bash"
      user "root"
      cwd "tmp"
      code <<-EOH
        /usr/bin/add-apt-repository ppa:jdub
      EOH
      not_if "/usr/bin/test -f /etc/apt/sources.list.d/jdub-ppa-lucid.list"
      notifies :run, "execute[apt_update]", :immediately
      collectd_package_version = "4.10.1-1~ppa1"
    end
  when 12.04
    collectd_package_version = "4.10.1-2.1ubuntu7"
  end #platform_version

  package "collectd-core" do
    package_name "collectd-core"
    version collectd_package_version
  end

  execute "apt-update" do
    command "apt-get update"
    action :nothing
  end
else #not ubuntu
  package "collectd" do
    package_name "collectd-core"
  end
end #platform

service "collectd" do
  supports :restart => true, :status => true
end

directory "/etc/collectd" do
  owner "root"
  group "root"
  mode "755"
end

directory "/etc/collectd/plugins" do
  owner "root"
  group "root"
  mode "755"
end

directory node[:collectd][:base_dir] do
  owner "root"
  group "root"
  mode "755"
  recursive true
end

directory node[:collectd][:plugin_dir] do
  owner "root"
  group "root"
  mode "755"
  recursive true
end

%w(collectd collection thresholds).each do |file|
  template "/etc/collectd/#{file}.conf" do
    source "#{file}.conf.erb"
    owner "root"
    group "root"
    mode "644"
    notifies :restart, resources(:service => "collectd")
  end
end

ruby_block "delete_old_plugins" do
  block do
    Dir['/etc/collectd/plugins/*.conf'].each do |path|
      autogen = false
      File.open(path).each_line do |line|
        if line.start_with?('#') and line.include?('autogenerated')
          autogen = true
          break
        end
      end
      if autogen
        begin
          resources(:template => path)
        rescue ArgumentError
          # If the file is autogenerated and has no template it has likely been removed from the run list
          Chef::Log.info("Deleting old plugin config in #{path}")
          File.unlink(path)
        end
      end
    end
  end
end

service "collectd" do
  action [:enable, :start]
end
